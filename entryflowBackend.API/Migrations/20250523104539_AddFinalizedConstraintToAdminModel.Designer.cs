// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using entryflowBackend.API.DbContext;

#nullable disable

namespace entryflowBackend.API.Migrations
{
    [DbContext(typeof(EntryflowDbContext))]
    [Migration("20250523104539_AddFinalizedConstraintToAdminModel")]
    partial class AddFinalizedConstraintToAdminModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("entryflowBackend.API.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("character varying(320)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("ValidatorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ValidatorId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("entryflowBackend.API.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardUid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("ValidatorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ValidatorId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("entryflowBackend.API.Models.RfidLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ValidatorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ValidatorId");

                    b.ToTable("RfidLogs");
                });

            modelBuilder.Entity("entryflowBackend.API.Models.Validator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SecretKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Validators");
                });

            modelBuilder.Entity("entryflowBackend.API.Models.Admin", b =>
                {
                    b.HasOne("entryflowBackend.API.Models.Validator", "Validator")
                        .WithMany("Admins")
                        .HasForeignKey("ValidatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Validator");
                });

            modelBuilder.Entity("entryflowBackend.API.Models.Employee", b =>
                {
                    b.HasOne("entryflowBackend.API.Models.Validator", "Validator")
                        .WithMany("Employees")
                        .HasForeignKey("ValidatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Validator");
                });

            modelBuilder.Entity("entryflowBackend.API.Models.RfidLog", b =>
                {
                    b.HasOne("entryflowBackend.API.Models.Employee", "Employee")
                        .WithMany("RfidLogs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("entryflowBackend.API.Models.Validator", "Validator")
                        .WithMany("RfidLogs")
                        .HasForeignKey("ValidatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Validator");
                });

            modelBuilder.Entity("entryflowBackend.API.Models.Employee", b =>
                {
                    b.Navigation("RfidLogs");
                });

            modelBuilder.Entity("entryflowBackend.API.Models.Validator", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Employees");

                    b.Navigation("RfidLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
